roc = roc(myy[testID], yhat[,1])
auc.res[j,i] = auc(roc)
}
}
}
auc.list = apply(auc.res,2,mean)
bestpara = para[which.max(auc.list)]
auc.res = matrix(NA,Niter,length(para),length(para2))
##start CV
Niter = 100
kfold = 10
##para for svm:cost
para = sapply(seq(-9,0,3),function(xx){
return(10**(xx))
})
##gama
para2 = sapply(seq(-9.5,0,3),function(xx){
return(10**(xx))
})
auc.res = matrix(NA,Niter,length(para),length(para2))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
for(k in 1:length(para2)){
print(j)
print(para[i])
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para[k] probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
}
}
}
i
j
k
i=1
j=1
k=1
print(j)
print(para[i])
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para[k] probability = T)
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k] probability = T)
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
model = svm(myx[-testID,],myy[-testID],cost = para[i], probability = T)
testID = sample(1:n,round(n/kfold))
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
dim(auc.res)
auc.res = array(NA,Niter,length(para),length(para2))
auc.res = array(NA,c(Niter,length(para),length(para2)))
print(j)
print(para[i])
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
dim(auc.res)
rm(list=ls())
library(e1071)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n =dim(myx)[1]
p =dim(myx)[2]
##start CV
Niter = 100
kfold = 10
##1.specify your parameter here
##cost
para = sapply(seq(-9,0,3),function(xx){
return(10**(xx))
})
##gama
para2 = sapply(seq(-9.5,0,3),function(xx){
return(10**(xx))
})
auc.res = array(NA,c(Niter,length(para),length(para2)))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
for(k in 1:length(para2)){
print(j)
print(para[i])
print(para2[k])
##modelling
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
}
}
}
##start CV
Niter = 10
kfold = 10
##1.specify your parameter here
##cost
para = sapply(seq(-9,0,3),function(xx){
return(10**(xx))
})
##gama
para2 = sapply(seq(-9.5,0,3),function(xx){
return(10**(xx))
})
auc.res = array(NA,c(Niter,length(para),length(para2)))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
for(k in 1:length(para2)){
print(j)
print(para[i])
print(para2[k])
##modelling
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
}
}
}
auc.list = apply(auc.res,2,mean)
auc.list
auc.list = apply(auc.res,c(2,3),mean)
View(auc.list)
levelplot(auc.list)
library(lattice)
levelplot(auc.list)
View(auc.list)
?levelplot()
levelplot(auc.list)
View(auc.list)
?levelplot()
contourplot(auc.list)
?levelplot()
rm(list=ls())
library(e1071)
library(pROC)
library(lattice)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n =dim(myx)[1]
p =dim(myx)[2]
##start CV
Niter = 10
kfold = 10
##1.specify your parameter here
##cost
para = sapply(seq(-9,0,3),function(xx){
return(10**(xx))
})
##gama
para2 = sapply(seq(-9.5,0,3),function(xx){
return(10**(xx))
})
auc.res = array(NA,c(Niter,length(para),length(para2)))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
for(k in 1:length(para2)){
print(j)
print(para[i])
print(para2[k])
##modelling
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
}
}
}
auc.list = apply(auc.res,c(2,3),mean)
levelplot(auc.list)
dput(auc.res,"auc.res.svm.r")
library(randomForest)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n = dim(myx)[1]
p = dim(myx)[2]
set.seed(71)
#### start CV
Niter = 100
kfold = 10
##1. change para
##para for randomforest:ntree
para = seq(400,800,30)
auc.res = matrix(NA,Niter,length(para))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
print(j)
print(para[i])
##2. change modelling
model = randomForest(myx[-testID,],myy[-testID],ntree  = para[i], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i] = auc(roc)
}
}
library(randomForest)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n = dim(myx)[1]
p = dim(myx)[2]
set.seed(71)
#### start CV
Niter = 100
kfold = 10
##1. change para
##para for randomforest:ntree
para = seq(400,800,30)
auc.res = matrix(NA,Niter,length(para))
j=1
i=1
testID = sample(1:n,round(n/kfold))
print(j)
print(para[i])
##2. change modelling
model = randomForest(myx[-testID,],myy[-testID],ntree  = para[i], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
dim(yhat)
yhat = predict(model,myx[testID,],probability = T)
dim(yhat)
class(yhat)
yhat=attr(yhat,"probabilities")
class(yhat)
yhat = predict(model,myx[testID,],probability = T)
yhat
yhat = predict(model,myx[testID,],probability = T)
yhat
yhat=attr(yhat,"probabilities")
yhat
yhat = predict(model,myx[testID,],type = "prob")
yhat
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
yhat
yhat = predict(model,myx[testID,],type = "prob")
class(yhat)
roc = roc(myy[testID], yhat[,1])
library(randomForest)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n = dim(myx)[1]
p = dim(myx)[2]
set.seed(71)
#### start CV
Niter = 100
kfold = 10
##1. change para
##para for randomforest:ntree
para = seq(400,800,30)
auc.res = matrix(NA,Niter,length(para))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
print(j)
print(para[i])
##2. change modelling
model = randomForest(myx[-testID,],myy[-testID],ntree  = para[i], probability = T)
yhat = predict(model,myx[testID,],type = "prob")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i] = auc(roc)
}
}
rm(list=ls())
library(e1071)
library(pROC)
library(lattice)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n =dim(myx)[1]
p =dim(myx)[2]
##start CV
Niter = 100
kfold = 10
##1.specify your parameter here
##cost
para = sapply(seq(-9,0,0.2),function(xx){
return(10**(xx))
})
##gama
para2 = sapply(seq(-9,0,0.2),function(xx){
return(10**(xx))
})
auc.res = array(NA,c(Niter,length(para),length(para2)))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
for(k in 1:length(para2)){
print(j)
##modelling
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
}
}
}
rm(list=ls())
library(e1071)
library(pROC)
library(lattice)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n =dim(myx)[1]
p =dim(myx)[2]
##start CV
Niter = 100
kfold = 10
##1.specify your parameter here
##cost
para = sapply(seq(-9,0,0.2),function(xx){
return(10**(xx))
})
##gama
para2 = sapply(seq(-9,0,0.2),function(xx){
return(10**(xx))
})
auc.res = array(NA,c(Niter,length(para),length(para2)))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
for(k in 1:length(para2)){
print(j)
##modelling
model = svm(myx[-testID,],myy[-testID],cost = para[i],gamma = para2[k], probability = T)
yhat = predict(model,myx[testID,],probability = T)
yhat=attr(yhat,"probabilities")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i,k] = auc(roc)
}
}
}
auc.list = apply(auc.res,c(2,3),mean)
dput(auc.res,"auc.res.svm.r")
levelplot(auc.list)
##bestpara = para[which.max(auc.list)]
dput(para,"svm.cost.para.r")
dput(para2,"svm.gamma.para.r")
dput(auc.res,"auc.res.svm.r")
#######  rf ####
library(randomForest)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n = dim(myx)[1]
p = dim(myx)[2]
set.seed(71)
#### start CV
Niter = 100
kfold = 10
##1. change para
##para for randomforest:ntree
para = seq(400,800,30)
auc.res = matrix(NA,Niter,length(para))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
print(j)
print(para[i])
##2. change modelling
model = randomForest(myx[-testID,],myy[-testID],ntree  = para[i], probability = T)
yhat = predict(model,myx[testID,],type = "prob")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i] = auc(roc)
}
}
auc.list = apply(auc.res,2,mean)
bestpara = para[which.max(auc.list)]
plot(para,auc.list)
dput(para,"rf.para.r")
dput(auc.res,"auc.res.rf.r")
#######  rf ####
library(randomForest)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n = dim(myx)[1]
p = dim(myx)[2]
set.seed(71)
#### start CV
Niter = 100
kfold = 10
##1. change para
##para for randomforest:ntree
para = seq(30,800,30)
auc.res = matrix(NA,Niter,length(para))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
print(j)
print(para[i])
##2. change modelling
model = randomForest(myx[-testID,],myy[-testID],ntree  = para[i], probability = T)
yhat = predict(model,myx[testID,],type = "prob")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i] = auc(roc)
}
}
#######  rf ####
library(randomForest)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n = dim(myx)[1]
p = dim(myx)[2]
set.seed(71)
#### start CV
Niter = 100
kfold = 10
##1. change para
##para for randomforest:ntree
para = seq(30,400,30)
auc.res = matrix(NA,Niter,length(para))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
print(j)
print(para[i])
##2. change modelling
model = randomForest(myx[-testID,],myy[-testID],ntree  = para[i], probability = T)
yhat = predict(model,myx[testID,],type = "prob")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i] = auc(roc)
}
}
auc.list = apply(auc.res,2,mean)
bestpara = para[which.max(auc.list)]
plot(para,auc.list)
tmppara = dget("rf.para.r")
tmpauc.res = dget("auc.res.rf.r")
para
savepara = para
saveauc.res = auc.res
para = c(para,tmppara)
pata
para
auc.res = cbind(auc.res,tmpauc.res)
auc.list = apply(auc.res,2,mean)
plot(para,auc.list)
dput(para,"1-rf.para.r")
dput(auc.res,"1-auc.res.rf.r")
library(randomForest)
library(pROC)
setwd("/Users/huangge/GoogleCloudDrive/6740/hw3/workspace")
data = read.csv("cleandata.csv")[,-1]
myy = data[,1]
myx = data.matrix(data[,-1])
n = dim(myx)[1]
p = dim(myx)[2]
set.seed(71)
#### start CV
Niter = 100
kfold = 10
##1. change para
##para for randomforest:ntree
para = seq(30,800,30)
auc.res = matrix(NA,Niter,length(para))
for(j in 1:Niter){
testID = sample(1:n,round(n/kfold))
for(i in 1:length(para)){
print(j)
print(para[i])
##2. change modelling
model = randomForest(myx[-testID,],myy[-testID],ntree  = para[i], probability = T)
yhat = predict(model,myx[testID,],type = "prob")
roc = roc(myy[testID], yhat[,1])
auc.res[j,i] = auc(roc)
}
}
auc.list = apply(auc.res,2,mean)
bestpara = para[which.max(auc.list)]
plot(para,auc.list)
dput(para,"2-rf.para.r")
dput(auc.res,"2-auc.res.rf.r")
